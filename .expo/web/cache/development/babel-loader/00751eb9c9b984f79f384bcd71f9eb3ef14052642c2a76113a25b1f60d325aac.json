{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"size\", \"theme\", \"accessibilityLabel\", \"disabled\", \"style\", \"value\", \"status\", \"onPress\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nimport { forwardRef } from \"../../utils/forwardRef\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { ToggleButtonGroupContext } from \"./ToggleButtonGroup\";\nimport { getToggleButtonColor } from \"./utils\";\nvar ToggleButton = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n    size = _ref.size,\n    themeOverrides = _ref.theme,\n    accessibilityLabel = _ref.accessibilityLabel,\n    disabled = _ref.disabled,\n    style = _ref.style,\n    value = _ref.value,\n    status = _ref.status,\n    _onPress = _ref.onPress,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var borderRadius = theme.roundness;\n  return React.createElement(ToggleButtonGroupContext.Consumer, null, function (context) {\n    var checked = context && context.value === value || status === 'checked';\n    var backgroundColor = getToggleButtonColor({\n      theme: theme,\n      checked: checked\n    });\n    var borderColor = theme.isV3 ? theme.colors.outline : color(theme.dark ? white : black).alpha(0.29).rgb().string();\n    return React.createElement(IconButton, _extends({\n      borderless: false,\n      icon: icon,\n      onPress: function onPress(e) {\n        if (_onPress) {\n          _onPress(e);\n        }\n        if (context) {\n          context.onValueChange(!checked ? value : null);\n        }\n      },\n      size: size,\n      accessibilityLabel: accessibilityLabel,\n      accessibilityState: {\n        disabled: disabled,\n        selected: checked\n      },\n      disabled: disabled,\n      style: [styles.content, {\n        backgroundColor: backgroundColor,\n        borderRadius: borderRadius,\n        borderColor: borderColor\n      }, style],\n      ref: ref,\n      theme: theme\n    }, rest));\n  });\n});\nvar styles = StyleSheet.create({\n  content: {\n    width: 42,\n    height: 42,\n    margin: 0\n  }\n});\nexport default ToggleButton;\nexport { ToggleButton };","map":{"version":3,"names":["React","StyleSheet","color","useInternalTheme","black","white","forwardRef","IconButton","ToggleButtonGroupContext","getToggleButtonColor","ToggleButton","_ref","ref","icon","size","themeOverrides","theme","accessibilityLabel","disabled","style","value","status","onPress","rest","_objectWithoutProperties","_excluded","borderRadius","roundness","createElement","Consumer","context","checked","backgroundColor","borderColor","isV3","colors","outline","dark","alpha","rgb","string","_extends","borderless","e","onValueChange","accessibilityState","selected","styles","content","create","width","height","margin"],"sources":["ToggleButton.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAU9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB;AACzB,SAASC,KAAK,EAAEC,KAAK;AAErB,SAASC,UAAU;AAEnB,OAAOC,UAAU;AACjB,SAASC,wBAAwB;AACjC,SAASC,oBAAoB;AAiF7B,IAAMC,YAAY,GAAGJ,UAAU,CAC7B,UAAAK,IAAA,EAaEC,GAAG,EACA;EAAA,IAZDC,IAAI,GAUEF,IAAA,CAVNE,IAAI;IACJC,IAAI,GASEH,IAAA,CATNG,IAAI;IACGC,cAAc,GAQfJ,IAAA,CARNK,KAAK;IACLC,kBAAkB,GAOZN,IAAA,CAPNM,kBAAkB;IAClBC,QAAQ,GAMFP,IAAA,CANNO,QAAQ;IACRC,KAAK,GAKCR,IAAA,CALNQ,KAAK;IACLC,KAAK,GAICT,IAAA,CAJNS,KAAK;IACLC,MAAM,GAGAV,IAAA,CAHNU,MAAM;IACNC,QAAO,GAEDX,IAAA,CAFNW,OAAO;IACJC,IAAA,GAAAC,wBAAA,CACGb,IAAA,EAAAc,SAAA;EAGR,IAAMT,KAAK,GAAGb,gBAAgB,CAACY,cAAc,CAAC;EAC9C,IAAMW,YAAY,GAAGV,KAAK,CAACW,SAAS;EAEpC,OACE3B,KAAA,CAAA4B,aAAA,CAACpB,wBAAwB,CAACqB,QAAQ,QAE9B,UAAAC,OAAiE,EAC9D;IACH,IAAMC,OAAuB,GAC1BD,OAAO,IAAIA,OAAO,CAACV,KAAK,KAAKA,KAAK,IAAKC,MAAM,KAAK,SAAS;IAE9D,IAAMW,eAAe,GAAGvB,oBAAoB,CAAC;MAAEO,KAAK,EAALA,KAAK;MAAEe,OAAA,EAAAA;IAAQ,CAAC,CAAC;IAChE,IAAME,WAAW,GAAGjB,KAAK,CAACkB,IAAI,GAC1BlB,KAAK,CAACmB,MAAM,CAACC,OAAO,GACpBlC,KAAK,CAACc,KAAK,CAACqB,IAAI,GAAGhC,KAAK,GAAGD,KAAK,CAAC,CAC9BkC,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE;IAEf,OACExC,KAAA,CAAA4B,aAAA,CAACrB,UAAU,EAAAkC,QAAA;MACTC,UAAU,EAAE,KAAM;MAClB7B,IAAI,EAAEA,IAAK;MACXS,OAAO,EAAG,SAAAA,QAAAqB,CAAkC,EAAK;QAC/C,IAAIrB,QAAO,EAAE;UACXA,QAAO,CAACqB,CAAC,CAAC;QACZ;QAEA,IAAIb,OAAO,EAAE;UACXA,OAAO,CAACc,aAAa,CAAC,CAACb,OAAO,GAAGX,KAAK,GAAG,IAAI,CAAC;QAChD;MACF,CAAE;MACFN,IAAI,EAAEA,IAAK;MACXG,kBAAkB,EAAEA,kBAAmB;MACvC4B,kBAAkB,EAAE;QAAE3B,QAAQ,EAARA,QAAQ;QAAE4B,QAAQ,EAAEf;MAAQ,CAAE;MACpDb,QAAQ,EAAEA,QAAS;MACnBC,KAAK,EAAE,CACL4B,MAAM,CAACC,OAAO,EACd;QACEhB,eAAe,EAAfA,eAAe;QACfN,YAAY,EAAZA,YAAY;QACZO,WAAA,EAAAA;MACF,CAAC,EACDd,KAAK,CACL;MACFP,GAAG,EAAEA,GAAI;MACTI,KAAK,EAAEA;IAAM,GACTO,IAAI,EACR;EAEN,CAAC,CACiC;AAExC,CAAC,CACF;AAED,IAAMwB,MAAM,GAAG9C,UAAU,CAACgD,MAAM,CAAC;EAC/BD,OAAO,EAAE;IACPE,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAe1C,YAAY;AAG3B,SAASA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}