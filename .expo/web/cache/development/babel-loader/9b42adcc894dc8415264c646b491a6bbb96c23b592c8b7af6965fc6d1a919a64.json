{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Placement } from \"./Types\";\nvar Arrow = React.forwardRef(function (props, ref) {\n  var _a;\n  var placement = props.placement,\n    color = props.color,\n    arrowSize = props.arrowSize,\n    positionStyle = props.positionStyle,\n    elevation = props.elevation;\n  var isTransparent = color ? color.toString() === 'transparent' || color.toString().startsWith('rgba') || color.toString().startsWith('hsla') || color.toString().startsWith('#') && color.toString().length > 7 : false;\n  var width = arrowSize.width + (isTransparent ? 0 : 2);\n  var height = arrowSize.height + (isTransparent ? 0 : 2);\n  var placeLeftOrRight = [Placement.LEFT, Placement.RIGHT].includes(placement);\n  var arrowOuterStyle = __assign({\n    position: 'absolute',\n    width: placeLeftOrRight ? height : width,\n    height: placeLeftOrRight ? width : height,\n    overflow: 'hidden',\n    elevation: elevation\n  }, positionStyle);\n  var arrowInnerStyle = (_a = {\n    position: 'absolute'\n  }, _a[placement] = 0, _a.borderBottomColor = color, _a.borderRightColor = 'transparent', _a.borderLeftColor = 'transparent', _a.width = width, _a.height = height * 2, _a.borderBottomWidth = height, _a.borderRightWidth = width / 2, _a.borderLeftWidth = width / 2, _a);\n  switch (placement) {\n    case Placement.TOP:\n      arrowInnerStyle.transform = [{\n        rotateZ: '180deg'\n      }];\n      break;\n    case Placement.LEFT:\n      arrowInnerStyle.transform = [{\n        rotateZ: '90deg'\n      }];\n      break;\n    case Placement.RIGHT:\n      arrowInnerStyle.transform = [{\n        rotateZ: '270deg'\n      }];\n      break;\n    default:\n  }\n  return React.createElement(View, {\n    style: arrowOuterStyle,\n    ref: ref\n  }, React.createElement(View, {\n    style: arrowInnerStyle\n  }));\n});\nexport default Arrow;","map":{"version":3,"names":["React","View","Placement","Arrow","forwardRef","props","ref","placement","color","arrowSize","positionStyle","elevation","isTransparent","toString","startsWith","length","width","height","placeLeftOrRight","LEFT","RIGHT","includes","arrowOuterStyle","__assign","position","overflow","arrowInnerStyle","_a","borderBottomColor","borderRightColor","borderLeftColor","borderBottomWidth","borderRightWidth","borderLeftWidth","TOP","transform","rotateZ","createElement","style"],"sources":["/home/senac/Docks-mobile-P.I/node_modules/react-native-popover-view/src/Arrow.tsx"],"sourcesContent":["import React, { ForwardedRef, ReactElement } from 'react';\nimport { View, ViewStyle } from 'react-native';\nimport { Placement, Size } from './Types';\n\nexport type ArrowProps = {\n    placement: Placement;\n    color: ViewStyle['backgroundColor'];\n    arrowSize: Size;\n    positionStyle: Pick<ViewStyle, 'top' | 'bottom' | 'left' | 'right'>;\n    elevation?: number;\n};\nconst Arrow = React.forwardRef((props: ArrowProps, ref: ForwardedRef<View>): ReactElement => {\n  const { placement, color, arrowSize, positionStyle, elevation } = props;\n\n  /*\n   * Make width and height slightly bigger so that it overlaps popover to eliminate seem\n   * (unless transparency is in play, in which case the overlap would show)\n   */\n  const isTransparent = color\n    ? color.toString() === 'transparent' ||\n      color.toString().startsWith('rgba') ||\n      color.toString().startsWith('hsla') ||\n      (color.toString().startsWith('#') && color.toString().length > 7)\n    : false;\n  const width = arrowSize.width + (isTransparent ? 0 : 2);\n  const height = arrowSize.height + (isTransparent ? 0 : 2);\n\n  // Flip width and height when showing on side to account for inner transform\n  const placeLeftOrRight = [Placement.LEFT, Placement.RIGHT].includes(placement);\n  const arrowOuterStyle: ViewStyle = {\n    position: 'absolute',\n    width: placeLeftOrRight ? height : width,\n    height: placeLeftOrRight ? width : height,\n    overflow: 'hidden',\n    elevation,\n    ...positionStyle\n  };\n\n  // Create a triangle using borders\n  const arrowInnerStyle: ViewStyle = {\n    position: 'absolute',\n    [placement]: 0,\n    borderBottomColor: color,\n    borderRightColor: 'transparent',\n    borderLeftColor: 'transparent',\n    width,\n    height: height * 2,\n    borderBottomWidth: height,\n    borderRightWidth: width / 2,\n    borderLeftWidth: width / 2\n  };\n\n  // Rotate to show the triangle in different directions\n  switch (placement) {\n    case Placement.TOP: arrowInnerStyle.transform = [{ rotateZ: '180deg' }]; break;\n    case Placement.LEFT: arrowInnerStyle.transform = [{ rotateZ: '90deg' }]; break;\n    case Placement.RIGHT: arrowInnerStyle.transform = [{ rotateZ: '270deg' }]; break;\n    default:\n  }\n\n  return (\n    <View style={arrowOuterStyle} ref={ref}>\n      <View style={arrowInnerStyle} />\n    </View>\n  );\n});\n\nexport default Arrow;\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAqC,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1D,SAASC,SAAS;AASlB,IAAMC,KAAK,GAAGH,KAAK,CAACI,UAAU,CAAC,UAACC,KAAiB,EAAEC,GAAuB;;EAChE,IAAAC,SAAS,GAAiDF,KAAK,CAAAE,SAAtD;IAAEC,KAAK,GAA0CH,KAAK,CAAAG,KAA/C;IAAEC,SAAS,GAA+BJ,KAAK,CAAAI,SAApC;IAAEC,aAAa,GAAgBL,KAAK,CAAAK,aAArB;IAAEC,SAAS,GAAKN,KAAK,CAAAM,SAAV;EAM7D,IAAMC,aAAa,GAAGJ,KAAK,GACvBA,KAAK,CAACK,QAAQ,EAAE,KAAK,aAAa,IAClCL,KAAK,CAACK,QAAQ,EAAE,CAACC,UAAU,CAAC,MAAM,CAAC,IACnCN,KAAK,CAACK,QAAQ,EAAE,CAACC,UAAU,CAAC,MAAM,CAAC,IAClCN,KAAK,CAACK,QAAQ,EAAE,CAACC,UAAU,CAAC,GAAG,CAAC,IAAIN,KAAK,CAACK,QAAQ,EAAE,CAACE,MAAM,GAAG,CAAE,GACjE,KAAK;EACT,IAAMC,KAAK,GAAGP,SAAS,CAACO,KAAK,IAAIJ,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;EACvD,IAAMK,MAAM,GAAGR,SAAS,CAACQ,MAAM,IAAIL,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;EAGzD,IAAMM,gBAAgB,GAAG,CAAChB,SAAS,CAACiB,IAAI,EAAEjB,SAAS,CAACkB,KAAK,CAAC,CAACC,QAAQ,CAACd,SAAS,CAAC;EAC9E,IAAMe,eAAe,GAAAC,QAAA;IACnBC,QAAQ,EAAE,UAAU;IACpBR,KAAK,EAAEE,gBAAgB,GAAGD,MAAM,GAAGD,KAAK;IACxCC,MAAM,EAAEC,gBAAgB,GAAGF,KAAK,GAAGC,MAAM;IACzCQ,QAAQ,EAAE,QAAQ;IAClBd,SAAS,EAAAA;EAAA,GACND,aAAa,CACjB;EAGD,IAAMgB,eAAe,IAAAC,EAAA;IACnBH,QAAQ,EAAE;KACVG,EAAA,CAACpB,SAAS,IAAG,CAAC,EACdoB,EAAA,CAAAC,iBAAiB,GAAEpB,KAAK,EACxBmB,EAAA,CAAAE,gBAAgB,GAAE,aAAa,EAC/BF,EAAA,CAAAG,eAAe,GAAE,aAAa,EAC9BH,EAAA,CAAAX,KAAK,GAAAA,KAAA,EACLW,EAAA,CAAAV,MAAM,GAAEA,MAAM,GAAG,CAAC,EAClBU,EAAA,CAAAI,iBAAiB,GAAEd,MAAM,EACzBU,EAAA,CAAAK,gBAAgB,GAAEhB,KAAK,GAAG,CAAC,EAC3BW,EAAA,CAAAM,eAAe,GAAEjB,KAAK,GAAG,CAAC,E,GAC3B;EAGD,QAAQT,SAAS;IACf,KAAKL,SAAS,CAACgC,GAAG;MAAER,eAAe,CAACS,SAAS,GAAG,CAAC;QAAEC,OAAO,EAAE;MAAQ,CAAE,CAAC;MAAE;IACzE,KAAKlC,SAAS,CAACiB,IAAI;MAAEO,eAAe,CAACS,SAAS,GAAG,CAAC;QAAEC,OAAO,EAAE;MAAO,CAAE,CAAC;MAAE;IACzE,KAAKlC,SAAS,CAACkB,KAAK;MAAEM,eAAe,CAACS,SAAS,GAAG,CAAC;QAAEC,OAAO,EAAE;MAAQ,CAAE,CAAC;MAAE;IAC3E;EAAQ;EAGV,OACEpC,KAAA,CAAAqC,aAAA,CAACpC,IAAI;IAACqC,KAAK,EAAEhB,eAAe;IAAEhB,GAAG,EAAEA;EAAG,GACpCN,KAAA,CAAAqC,aAAA,CAACpC,IAAI;IAACqC,KAAK,EAAEZ;EAAe,EAAI,CAC3B;AAEX,CAAC,CAAC;AAEF,eAAevB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}