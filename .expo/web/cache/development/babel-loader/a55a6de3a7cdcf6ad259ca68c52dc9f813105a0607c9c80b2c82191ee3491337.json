{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Divider } from 'react-native-paper';\nimport Popover from 'react-native-popover-view';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuPop = function MenuPop() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuVisible = _useState2[0],\n    setIsMenuVisible = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setIsMenuVisible(!isMenuVisible);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Abrir menu\"\n      })\n    }), _jsxs(Popover, {\n      isVisible: isMenuVisible,\n      onRequestClose: toggleMenu,\n      placement: \"bottom\",\n      arrowStyle: styles.popoverArrow,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.menuItem,\n        onPress: function onPress() {\n          return console.log('Editar livro');\n        },\n        children: _jsx(Text, {\n          style: styles.menuItemText,\n          children: \"Editar livro\"\n        })\n      }), _jsx(Divider, {}), _jsx(TouchableOpacity, {\n        style: styles.menuItem,\n        onPress: function onPress() {\n          return console.log('Excluir livro');\n        },\n        children: _jsx(Text, {\n          style: styles.menuItemText,\n          children: \"Excluir livro\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#333',\n    fontWeight: 'bold'\n  },\n  popoverArrow: {\n    borderTopColor: 'white'\n  },\n  menuItem: {\n    borderRadius: 0,\n    border: \"4px solid #F6EB60\",\n    width: 10,\n    height: 50,\n    justifyContent: \"center\",\n    display: \"flex\",\n    alignItems: 'center'\n  },\n  menuItemText: {\n    fontSize: 17\n  }\n});\nexport default MenuPop;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TouchableOpacity","Divider","Popover","jsx","_jsx","jsxs","_jsxs","MenuPop","_useState","_useState2","_slicedToArray","isMenuVisible","setIsMenuVisible","toggleMenu","style","styles","container","children","button","onPress","buttonText","isVisible","onRequestClose","placement","arrowStyle","popoverArrow","menuItem","console","log","menuItemText","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","color","fontWeight","borderTopColor","border","width","height","display","fontSize"],"sources":["/home/senac/Docks-mobile-P.I/src/Screens/MenuPopUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport { Divider } from 'react-native-paper';\nimport Popover from 'react-native-popover-view';\n\nconst MenuPop = () => {\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMenuVisible(!isMenuVisible);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.button} onPress={toggleMenu}>\n        <Text style={styles.buttonText}>Abrir menu</Text>\n      </TouchableOpacity>\n      <Popover\n        isVisible={isMenuVisible}\n        onRequestClose={toggleMenu}\n        placement=\"bottom\"\n        arrowStyle={styles.popoverArrow}\n      >\n        <TouchableOpacity style={styles.menuItem} onPress={() => console.log('Editar livro')}>\n          <Text style={styles.menuItemText}>Editar livro</Text>\n        </TouchableOpacity>\n        <Divider/>\n        <TouchableOpacity style={styles.menuItem} onPress={() => console.log('Excluir livro')}>\n          <Text style={styles.menuItemText}>Excluir livro</Text>\n        </TouchableOpacity>\n      </Popover>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#333',\n    fontWeight: 'bold',\n  },\n  popoverArrow: {\n    borderTopColor: 'white',\n  },\n  menuItem: {\n    borderRadius:0,\n    border:\"4px solid #F6EB60\",\n    width: 10,\n    height:50,\n    justifyContent:\"center\",\n    display: \"flex\",\n    alignItems:'center'\n\n  },\n  menuItemText: {\n    fontSize: 17,\n   \n  },\n});\n\nexport default MenuPop;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,OAAO,MAAM,2BAA2B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAA0CZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,OACEL,KAAA,CAACR,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bb,IAAA,CAACJ,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACG,MAAO;MAACC,OAAO,EAAEN,UAAW;MAAAI,QAAA,EAC1Db,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAH,QAAA,EAAC;MAAU;IAAO,EAChC,EACnBX,KAAA,CAACJ,OAAO;MACNmB,SAAS,EAAEV,aAAc;MACzBW,cAAc,EAAET,UAAW;MAC3BU,SAAS,EAAC,QAAQ;MAClBC,UAAU,EAAET,MAAM,CAACU,YAAa;MAAAR,QAAA,GAEhCb,IAAA,CAACJ,gBAAgB;QAACc,KAAK,EAAEC,MAAM,CAACW,QAAS;QAACP,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMQ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAAA,CAAC;QAAAX,QAAA,EACnFb,IAAA,CAACL,IAAI;UAACe,KAAK,EAAEC,MAAM,CAACc,YAAa;UAAAZ,QAAA,EAAC;QAAY;MAAO,EACpC,EACnBb,IAAA,CAACH,OAAO,KAAE,EACVG,IAAA,CAACJ,gBAAgB;QAACc,KAAK,EAAEC,MAAM,CAACW,QAAS;QAACP,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAAA,CAAC;QAAAX,QAAA,EACpFb,IAAA,CAACL,IAAI;UAACe,KAAK,EAAEC,MAAM,CAACc,YAAa;UAAAZ,QAAA,EAAC;QAAa;MAAO,EACrC;IAAA,EACX;EAAA,EACL;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGlB,UAAU,CAACiC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,MAAM,EAAE;IACNgB,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfH,UAAU,EAAE;EACd,CAAC;EACDb,UAAU,EAAE;IACViB,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EACd,CAAC;EACDb,YAAY,EAAE;IACZc,cAAc,EAAE;EAClB,CAAC;EACDb,QAAQ,EAAE;IACRU,YAAY,EAAC,CAAC;IACdI,MAAM,EAAC,mBAAmB;IAC1BC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAC,EAAE;IACTV,cAAc,EAAC,QAAQ;IACvBW,OAAO,EAAE,MAAM;IACfV,UAAU,EAAC;EAEb,CAAC;EACDJ,YAAY,EAAE;IACZe,QAAQ,EAAE;EAEZ;AACF,CAAC,CAAC;AAEF,eAAerC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}