{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      onPress: function onPress() {\n        return navigation.toggleDrawer();\n      },\n      children: \"Feed Screen\"\n    })\n  });\n}\nfunction Notifications() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Notifications Screen\"\n    })\n  });\n}\nfunction Profile() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Profile Screen\"\n    })\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Feed\",\n    drawerPosition: \"right\",\n    children: [_jsx(Drawer.Screen, {\n      name: \"Feed\",\n      component: Feed,\n      options: {\n        drawerLabel: 'Home'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Notifications\",\n      component: Notifications,\n      options: {\n        drawerLabel: 'Updates'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        drawerLabel: 'Profile'\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(MyDrawer, {})\n  });\n}","map":{"version":3,"names":["React","View","Text","NavigationContainer","createDrawerNavigator","jsx","_jsx","jsxs","_jsxs","Feed","_ref","navigation","style","flex","justifyContent","alignItems","children","onPress","toggleDrawer","Notifications","Profile","Drawer","MyDrawer","Navigator","initialRouteName","drawerPosition","Screen","name","component","options","drawerLabel","App"],"sources":["/home/senac/Docks-mobile-P.I/App.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nfunction Feed({ navigation }) {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text onPress={() => navigation.toggleDrawer()}>Feed Screen</Text>\n    </View>\n  );\n}\n\nfunction Notifications() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications Screen</Text>\n    </View>\n  );\n}\n\nfunction Profile() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Profile Screen</Text>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator\n      initialRouteName=\"Feed\"\n      // ISSUE HERE - Change this value to 'left'\n      drawerPosition=\"right\">\n      <Drawer.Screen\n        name=\"Feed\"\n        component={Feed}\n        options={{ drawerLabel: 'Home' }}\n      />\n      <Drawer.Screen\n        name=\"Notifications\"\n        component={Notifications}\n        options={{ drawerLabel: 'Updates' }}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ drawerLabel: 'Profile' }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjE,SAASC,IAAIA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxB,OACEL,IAAA,CAACL,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvEV,IAAA,CAACJ,IAAI;MAACe,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,YAAY,EAAE;MAAA,CAAC;MAAAF,QAAA,EAAC;IAAW;EAAO,EAC7D;AAEX;AAEA,SAASG,aAAaA,CAAA,EAAG;EACvB,OACEb,IAAA,CAACL,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvEV,IAAA,CAACJ,IAAI;MAAAc,QAAA,EAAC;IAAoB;EAAO,EAC5B;AAEX;AAEA,SAASI,OAAOA,CAAA,EAAG;EACjB,OACEd,IAAA,CAACL,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvEV,IAAA,CAACJ,IAAI;MAAAc,QAAA,EAAC;IAAc;EAAO,EACtB;AAEX;AAEA,IAAMK,MAAM,GAAGjB,qBAAqB,EAAE;AAEtC,SAASkB,QAAQA,CAAA,EAAG;EAClB,OACEd,KAAA,CAACa,MAAM,CAACE,SAAS;IACfC,gBAAgB,EAAC,MAAM;IAEvBC,cAAc,EAAC,OAAO;IAAAT,QAAA,GACtBV,IAAA,CAACe,MAAM,CAACK,MAAM;MACZC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEnB,IAAK;MAChBoB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAO;IAAE,EACjC,EACFxB,IAAA,CAACe,MAAM,CAACK,MAAM;MACZC,IAAI,EAAC,eAAe;MACpBC,SAAS,EAAET,aAAc;MACzBU,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAU;IAAE,EACpC,EACFxB,IAAA,CAACe,MAAM,CAACK,MAAM;MACZC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAER,OAAQ;MACnBS,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAU;IAAE,EACpC;EAAA,EACe;AAEvB;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACEzB,IAAA,CAACH,mBAAmB;IAAAa,QAAA,EAClBV,IAAA,CAACgB,QAAQ;EAAG,EACQ;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}