{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Feed() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"FEED\"\n    })\n  });\n}\nfunction Article() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"ARTICLE\"\n    })\n  });\n}\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Help\",\n      onPress: function onPress() {\n        return alert('Link to help');\n      }\n    })]\n  }));\n}\nvar Drawer = createDrawerNavigator();\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    screenOptions: {\n      drawerPosition: 'right'\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Feed\",\n      component: Feed\n    }), _jsx(Drawer.Screen, {\n      name: \"Article\",\n      component: Article\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(DrawerWithRightSideMenu, {})\n  });\n}\nfunction DrawerWithRightSideMenu() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isDrawerOpen = _React$useState2[0],\n    setIsDrawerOpen = _React$useState2[1];\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setIsDrawerOpen(true);\n      },\n      style: {\n        position: 'absolute',\n        top: 40,\n        right: 20,\n        zIndex: 1\n      },\n      children: _jsx(Ionicons, {\n        name: \"menu\",\n        size: 32,\n        color: \"black\"\n      })\n    }), _jsxs(Drawer.Navigator, {\n      useLegacyImplementation: true,\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomDrawerContent, _objectSpread({}, props));\n      },\n      screenOptions: {\n        drawerPosition: 'right'\n      },\n      drawerType: \"slide\",\n      overlayColor: \"transparent\",\n      drawerStyle: {\n        width: '50%'\n      },\n      onDrawerClose: function onDrawerClose() {\n        return setIsDrawerOpen(false);\n      },\n      open: isDrawerOpen,\n      children: [_jsx(Drawer.Screen, {\n        name: \"Feed\",\n        component: Feed\n      }), _jsx(Drawer.Screen, {\n        name: \"Article\",\n        component: Article\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Ionicons","jsx","_jsx","jsxs","_jsxs","Feed","style","flex","justifyContent","alignItems","children","Article","CustomDrawerContent","props","_objectSpread","label","onPress","alert","Drawer","MyDrawer","Navigator","useLegacyImplementation","drawerContent","screenOptions","drawerPosition","Screen","name","component","App","DrawerWithRightSideMenu","_React$useState","useState","_React$useState2","_slicedToArray","isDrawerOpen","setIsDrawerOpen","position","top","right","zIndex","size","color","drawerType","overlayColor","drawerStyle","width","onDrawerClose","open"],"sources":["/home/senac/Docks-mobile-P.I/App.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction Feed() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>FEED</Text>\n    </View>\n  );\n}\n\nfunction Article() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>ARTICLE</Text>\n    </View>\n  );\n}\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n      <DrawerItem label=\"Help\" onPress={() => alert('Link to help')} />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator\n      useLegacyImplementation\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n      screenOptions={{\n        drawerPosition: 'right',\n      }}\n    >\n      <Drawer.Screen name=\"Feed\" component={Feed} />\n      <Drawer.Screen name=\"Article\" component={Article} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <DrawerWithRightSideMenu />\n    </NavigationContainer>\n  );\n}\n\nfunction DrawerWithRightSideMenu() {\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <TouchableOpacity\n        onPress={() => setIsDrawerOpen(true)}\n        style={{\n          position: 'absolute',\n          top: 40,\n          right: 20,\n          zIndex: 1,\n        }}\n      >\n        <Ionicons name=\"menu\" size={32} color=\"black\" />\n      </TouchableOpacity>\n\n      <Drawer.Navigator\n        useLegacyImplementation\n        drawerContent={(props) => <CustomDrawerContent {...props} />}\n        screenOptions={{\n          drawerPosition: 'right',\n        }}\n        drawerType=\"slide\"\n        overlayColor=\"transparent\"\n        drawerStyle={{ width: '50%' }}\n        onDrawerClose={() => setIsDrawerOpen(false)}\n        open={isDrawerOpen}\n      >\n        <Drawer.Screen name=\"Feed\" component={Feed} />\n        <Drawer.Screen name=\"Article\" component={Article} />\n      </Drawer.Navigator>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}