{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { getConstants } from \"../helpers\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./enums\";\nimport TextInputAffix, { AffixAdornment } from \"./TextInputAffix\";\nimport TextInputIcon, { IconAdornment } from \"./TextInputIcon\";\nexport function getAdornmentConfig(_ref) {\n  var left = _ref.left,\n    right = _ref.right;\n  var adornmentConfig = [];\n  if (left || right) {\n    [{\n      side: AdornmentSide.Left,\n      adornment: left\n    }, {\n      side: AdornmentSide.Right,\n      adornment: right\n    }].forEach(function (_ref2) {\n      var side = _ref2.side,\n        adornment = _ref2.adornment;\n      if (adornment && React.isValidElement(adornment)) {\n        var type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side: side,\n          type: type\n        });\n      }\n    });\n  }\n  return adornmentConfig;\n}\nexport function getAdornmentStyleAdjustmentForNativeInput(_ref3) {\n  var adornmentConfig = _ref3.adornmentConfig,\n    leftAffixWidth = _ref3.leftAffixWidth,\n    rightAffixWidth = _ref3.rightAffixWidth,\n    paddingHorizontal = _ref3.paddingHorizontal,\n    _ref3$inputOffset = _ref3.inputOffset,\n    inputOffset = _ref3$inputOffset === void 0 ? 0 : _ref3$inputOffset,\n    mode = _ref3.mode,\n    isV3 = _ref3.isV3;\n  var _getConstants = getConstants(isV3),\n    OUTLINED_INPUT_OFFSET = _getConstants.OUTLINED_INPUT_OFFSET,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET;\n  if (adornmentConfig.length) {\n    var adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(function (_ref4) {\n      var _ref7;\n      var type = _ref4.type,\n        side = _ref4.side;\n      var isLeftSide = side === AdornmentSide.Left;\n      var inputModeAdornemntOffset = mode === InputMode.Outlined ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET : ADORNMENT_OFFSET;\n      var paddingKey = \"padding\" + captalize(side);\n      var affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n      var padding = typeof paddingHorizontal === 'number' ? paddingHorizontal : inputModeAdornemntOffset;\n      var offset = affixWidth + padding;\n      var isAffix = type === AdornmentType.Affix;\n      var marginKey = \"margin\" + captalize(side);\n      return _ref7 = {}, _defineProperty(_ref7, marginKey, isAffix ? 0 : offset), _defineProperty(_ref7, paddingKey, isAffix ? offset : inputOffset), _ref7;\n    });\n    var allStyleAdjustmentsMerged = adornmentStyleAdjustmentForNativeInput.reduce(function (mergedStyles, currentStyle) {\n      return _objectSpread(_objectSpread({}, mergedStyles), currentStyle);\n    }, {});\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\nvar captalize = function captalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\nvar TextInputAdornment = function TextInputAdornment(_ref5) {\n  var adornmentConfig = _ref5.adornmentConfig,\n    left = _ref5.left,\n    right = _ref5.right,\n    onAffixChange = _ref5.onAffixChange,\n    textStyle = _ref5.textStyle,\n    visible = _ref5.visible,\n    topPosition = _ref5.topPosition,\n    isTextInputFocused = _ref5.isTextInputFocused,\n    forceFocus = _ref5.forceFocus,\n    paddingHorizontal = _ref5.paddingHorizontal,\n    maxFontSizeMultiplier = _ref5.maxFontSizeMultiplier,\n    theme = _ref5.theme;\n  if (adornmentConfig.length) {\n    return React.createElement(React.Fragment, null, adornmentConfig.map(function (_ref6) {\n      var type = _ref6.type,\n        side = _ref6.side;\n      var inputAdornmentComponent;\n      if (side === AdornmentSide.Left) {\n        inputAdornmentComponent = left;\n      } else if (side === AdornmentSide.Right) {\n        inputAdornmentComponent = right;\n      }\n      var commonProps = {\n        side: side,\n        testID: side + \"-\" + type + \"-adornment\",\n        isTextInputFocused: isTextInputFocused,\n        paddingHorizontal: paddingHorizontal\n      };\n      if (type === AdornmentType.Icon) {\n        return React.createElement(IconAdornment, _extends({}, commonProps, {\n          theme: theme,\n          key: side,\n          icon: inputAdornmentComponent,\n          topPosition: topPosition[AdornmentType.Icon],\n          forceFocus: forceFocus\n        }));\n      } else if (type === AdornmentType.Affix) {\n        return React.createElement(AffixAdornment, _extends({}, commonProps, {\n          key: side,\n          topPosition: topPosition[AdornmentType.Affix][side],\n          affix: inputAdornmentComponent,\n          textStyle: textStyle,\n          onLayout: onAffixChange[side],\n          visible: visible,\n          maxFontSizeMultiplier: maxFontSizeMultiplier\n        }));\n      } else {\n        return null;\n      }\n    }));\n  } else {\n    return null;\n  }\n};\nexport default TextInputAdornment;","map":{"version":3,"names":["React","getConstants","AdornmentSide","AdornmentType","InputMode","TextInputAffix","AffixAdornment","TextInputIcon","IconAdornment","getAdornmentConfig","_ref","left","right","adornmentConfig","side","Left","adornment","Right","forEach","_ref2","isValidElement","type","Affix","Icon","push","getAdornmentStyleAdjustmentForNativeInput","_ref3","leftAffixWidth","rightAffixWidth","paddingHorizontal","_ref3$inputOffset","inputOffset","mode","isV3","_getConstants","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","length","adornmentStyleAdjustmentForNativeInput","map","_ref4","_ref7","isLeftSide","inputModeAdornemntOffset","Outlined","paddingKey","captalize","affixWidth","padding","offset","isAffix","marginKey","_defineProperty","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","_objectSpread","text","charAt","toUpperCase","slice","TextInputAdornment","_ref5","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","theme","createElement","Fragment","_ref6","inputAdornmentComponent","commonProps","testID","_extends","key","icon","affix","onLayout"],"sources":["TextInputAdornment.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}