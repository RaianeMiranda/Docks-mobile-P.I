{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"status\", \"label\", \"onPress\", \"labelStyle\", \"theme\", \"testID\", \"mode\", \"position\", \"accessibilityLabel\", \"disabled\", \"labelVariant\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport Checkbox from \"./Checkbox\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nvar CheckboxItem = function CheckboxItem(_ref) {\n  var style = _ref.style,\n    status = _ref.status,\n    label = _ref.label,\n    onPress = _ref.onPress,\n    labelStyle = _ref.labelStyle,\n    themeOverrides = _ref.theme,\n    testID = _ref.testID,\n    mode = _ref.mode,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'trailing' : _ref$position,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    disabled = _ref.disabled,\n    _ref$labelVariant = _ref.labelVariant,\n    labelVariant = _ref$labelVariant === void 0 ? 'bodyLarge' : _ref$labelVariant,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var checkboxProps = _objectSpread(_objectSpread({}, props), {}, {\n    status: status,\n    theme: theme,\n    disabled: disabled\n  });\n  var isLeading = position === 'leading';\n  var checkbox;\n  if (mode === 'android') {\n    checkbox = React.createElement(CheckboxAndroid, checkboxProps);\n  } else if (mode === 'ios') {\n    checkbox = React.createElement(CheckboxIOS, checkboxProps);\n  } else {\n    checkbox = React.createElement(Checkbox, checkboxProps);\n  }\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  var disabledTextColor = theme.isV3 ? theme.colors.onSurfaceDisabled : theme.colors.disabled;\n  var textAlign = isLeading ? 'right' : 'left';\n  var computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign: textAlign\n  };\n  return React.createElement(TouchableRipple, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      checked: status === 'checked',\n      disabled: disabled\n    },\n    onPress: onPress,\n    testID: testID,\n    disabled: disabled,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.container, style],\n    pointerEvents: \"none\",\n    importantForAccessibility: \"no-hide-descendants\"\n  }, isLeading && checkbox, React.createElement(Text, {\n    variant: labelVariant,\n    style: [styles.label, !theme.isV3 && styles.font, computedStyle, labelStyle]\n  }, label), !isLeading && checkbox));\n};\nCheckboxItem.displayName = 'Checkbox.Item';\nexport default CheckboxItem;\nexport { CheckboxItem };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1\n  },\n  font: {\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","TouchableRipple","Text","Checkbox","CheckboxAndroid","CheckboxIOS","CheckboxItem","_ref","style","status","label","onPress","labelStyle","themeOverrides","theme","testID","mode","_ref$position","position","_ref$accessibilityLab","accessibilityLabel","disabled","_ref$labelVariant","labelVariant","props","_objectWithoutProperties","_excluded","checkboxProps","_objectSpread","isLeading","checkbox","createElement","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","color","accessibilityRole","accessibilityState","checked","styles","container","pointerEvents","importantForAccessibility","variant","font","displayName","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["CheckboxItem.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}