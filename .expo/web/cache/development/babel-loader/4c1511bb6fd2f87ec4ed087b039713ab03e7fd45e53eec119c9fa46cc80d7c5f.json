{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\";\nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\nimport SimpleMenu, { MyComponent } from \"../Screens/MenuPopUpScreen\";\nimport ModalCadLivros from \"../Screens/ModalScreen\";\nimport MenuPop from \"../Screens/MenuPopUpScreen\";\nimport menuTest from \"../Screens/menuScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar CustomDrawer = function CustomDrawer(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsx(DrawerItemList, _objectSpread({}, props))\n  }));\n};\nexport function MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawer, _objectSpread({}, props));\n    },\n    useLegacyImplementation: true,\n    screenOptions: {\n      drawerStyle: {\n        width: 250,\n        height: 700,\n        marginTop: \"60px\"\n      },\n      drawerPosition: \"right\",\n      headerRight: function headerRight() {\n        var navigation = useNavigation();\n        return _jsx(Ionicons, {\n          name: \"menu\",\n          size: 28,\n          color: \"black\",\n          style: {\n            marginRight: 15\n          },\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return;\n      },\n      headerStyle: {\n        backgroundColor: \"#D5ECB4\"\n      }\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Biblioteca\",\n      component: BiblioScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"configScreen\",\n      component: ConfigScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"MenuPopUp\",\n      component: MenuPop\n    }), _jsx(Drawer.Screen, {\n      name: \"menu\",\n      component: menuTest\n    }), _jsx(Drawer.Screen, {\n      name: \"CadModal\",\n      component: ModalCadLivros\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useNavigation","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","Ionicons","BiblioScreen","ConfigScreen","SimpleMenu","MyComponent","ModalCadLivros","MenuPop","menuTest","jsx","_jsx","jsxs","_jsxs","Drawer","CustomDrawer","props","_objectSpread","children","MyDrawer","Navigator","drawerContent","useLegacyImplementation","screenOptions","drawerStyle","width","height","marginTop","drawerPosition","headerRight","navigation","name","size","color","style","marginRight","onPress","openDrawer","headerLeft","headerStyle","backgroundColor","Screen","component"],"sources":["/home/senac/Docks-mobile-P.I/src/Navigation/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView,\n    DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\"; \nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\nimport SimpleMenu, { MyComponent } from \"../Screens/MenuPopUpScreen\";\nimport ModalCadLivros from \"../Screens/ModalScreen\";\nimport MenuPop from \"../Screens/MenuPopUpScreen\";\nimport  menuTest from \"../Screens/menuScreen\";\n\n\n\nconst Drawer = createDrawerNavigator();\nconst CustomDrawer = (props) => {\n    return (\n\n        <DrawerContentScrollView {...props}>\n            <DrawerItemList {...props} />\n        </DrawerContentScrollView>\n\n    );\n};\n\nexport function MyDrawer() {\n\n    return (\n        <Drawer.Navigator\n            drawerContent={(props) => <CustomDrawer {...props} />}\n            useLegacyImplementation\n            screenOptions={{\n                drawerStyle: {\n                    width: 250,\n                    height: 700,\n                    marginTop: \"60px\",\n                },\n                drawerPosition: \"right\",\n                headerRight: () => {\n                    const navigation = useNavigation();\n                    return (\n                        <Ionicons\n                            name=\"menu\"\n                            size={28}\n                            color=\"black\"\n                            style={{ marginRight: 15 }}\n                            onPress={() => navigation.openDrawer()}\n                        />\n                    );\n                },\n                headerLeft: () => {\n                    return;\n                }, headerStyle: { backgroundColor: \"#D5ECB4\" },\n            }}>\n               \n            <Drawer.Screen name=\"Biblioteca\" component={BiblioScreen} />\n            <Drawer.Screen name=\"configScreen\" component={ConfigScreen} />\n            <Drawer.Screen name=\"MenuPopUp\" component={MenuPop} />\n            <Drawer.Screen name=\"menu\" component={menuTest} />\n            <Drawer.Screen name=\"CadModal\" component={ModalCadLivros} />\n          \n        </Drawer.Navigator>\n    );\n};"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SACIC,qBAAqB,EACrBC,uBAAuB,EACvBC,cAAc,QACX,0BAA0B;AACjC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY;AACrB,SAASC,YAAY;AACrB,OAAOC,UAAU,IAAIC,WAAW;AAChC,OAAOC,cAAc;AACrB,OAAOC,OAAO;AACd,OAAQC,QAAQ;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI9C,IAAMC,MAAM,GAAGf,qBAAqB,EAAE;AACtC,IAAMgB,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;EAC5B,OAEIL,IAAA,CAACX,uBAAuB,EAAAiB,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAAE,QAAA,EAC9BP,IAAA,CAACV,cAAc,EAAAgB,aAAA,KAAKD,KAAK;EAAI,GACP;AAGlC,CAAC;AAED,OAAO,SAASG,QAAQA,CAAA,EAAG;EAEvB,OACIN,KAAA,CAACC,MAAM,CAACM,SAAS;IACbC,aAAa,EAAE,SAAAA,cAACL,KAAK;MAAA,OAAKL,IAAA,CAACI,YAAY,EAAAE,aAAA,KAAKD,KAAK,EAAI;IAAA,CAAC;IACtDM,uBAAuB;IACvBC,aAAa,EAAE;MACXC,WAAW,EAAE;QACTC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,SAAS,EAAE;MACf,CAAC;MACDC,cAAc,EAAE,OAAO;MACvBC,WAAW,EAAE,SAAAA,YAAA,EAAM;QACf,IAAMC,UAAU,GAAGhC,aAAa,EAAE;QAClC,OACIa,IAAA,CAACT,QAAQ;UACL6B,IAAI,EAAC,MAAM;UACXC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC,OAAO;UACbC,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAG,CAAE;UAC3BC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMN,UAAU,CAACO,UAAU,EAAE;UAAA;QAAC,EACzC;MAEV,CAAC;MACDC,UAAU,EAAE,SAAAA,WAAA,EAAM;QACd;MACJ,CAAC;MAAEC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAU;IACjD,CAAE;IAAAtB,QAAA,GAEFP,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAACV,IAAI,EAAC,YAAY;MAACW,SAAS,EAAEvC;IAAa,EAAG,EAC5DQ,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAACV,IAAI,EAAC,cAAc;MAACW,SAAS,EAAEtC;IAAa,EAAG,EAC9DO,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAACV,IAAI,EAAC,WAAW;MAACW,SAAS,EAAElC;IAAQ,EAAG,EACtDG,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAACV,IAAI,EAAC,MAAM;MAACW,SAAS,EAAEjC;IAAS,EAAG,EAClDE,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAACV,IAAI,EAAC,UAAU;MAACW,SAAS,EAAEnC;IAAe,EAAG;EAAA,EAE7C;AAE3B;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}