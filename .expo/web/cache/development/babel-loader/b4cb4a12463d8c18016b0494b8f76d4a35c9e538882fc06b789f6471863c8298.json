{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.toggleDrawer();\n      },\n      children: _jsx(Icon, {\n        name: \"menu\",\n        size: 30,\n        color: \"#000\"\n      })\n    })]\n  });\n}\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings Screen\"\n    })\n  });\n}\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Help\",\n      onPress: function onPress() {\n        return alert('Link to help');\n      }\n    })]\n  }));\n}\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerPosition: \"right\",\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomDrawerContent, _objectSpread({}, props));\n      },\n      drawerStyle: {\n        backgroundColor: '#fff',\n        width: 240\n      },\n      drawerContentOptions: {\n        activeTintColor: '#000',\n        inactiveTintColor: '#999'\n      },\n      screenOptions: function screenOptions(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          headerRight: function headerRight() {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              },\n              children: _jsx(Icon, {\n                name: \"menu\",\n                size: 30,\n                color: \"#000\",\n                style: {\n                  marginRight: 10\n                }\n              })\n            });\n          }\n        };\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","NavigationContainer","Icon","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","flex","alignItems","justifyContent","children","onPress","toggleDrawer","name","size","color","SettingsScreen","CustomDrawerContent","props","_objectSpread","label","alert","Drawer","App","Navigator","drawerPosition","drawerContent","drawerStyle","backgroundColor","width","drawerContentOptions","activeTintColor","inactiveTintColor","screenOptions","_ref2","headerRight","marginRight","Screen","component"],"sources":["/home/senac/Docks-mobile-P.I/App.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n        <Icon name=\"menu\" size={30} color=\"#000\" />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Settings Screen</Text>\n    </View>\n  );\n}\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n      <DrawerItem label=\"Help\" onPress={() => alert('Link to help')} />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerPosition=\"right\"\n        drawerContent={props => <CustomDrawerContent {...props} />}\n        drawerStyle={{\n          backgroundColor: '#fff',\n          width: 240,\n        }}\n        drawerContentOptions={{\n          activeTintColor: '#000',\n          inactiveTintColor: '#999',\n        }}\n        screenOptions={({ navigation }) => ({\n          headerRight: () => (\n            <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n              <Icon name=\"menu\" size={30} color=\"#000\" style={{ marginRight: 10 }} />\n            </TouchableOpacity>\n          ),\n        })}\n      >\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"Settings\" component={SettingsScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}