{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Popover } from 'react-native-elements/dist/popover/Popover';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuPop = function MenuPop() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuVisible = _useState2[0],\n    setIsMenuVisible = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setIsMenuVisible(!isMenuVisible);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Popover, {\n      isVisible: isMenuVisible,\n      onBackdropPress: toggleMenu,\n      placement: \"bottom\",\n      from: _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: toggleMenu,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Abrir menu\"\n        })\n      }),\n      children: _jsxs(View, {\n        style: styles.menuContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return console.log('Editar livro');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItemText,\n            children: \"Editar livro\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return console.log('Excluir livro');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItemText,\n            children: \"Excluir livro\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#e5e5e5',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#333',\n    fontWeight: 'bold'\n  },\n  menuContainer: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    alignItems: 'center'\n  },\n  menuItem: {\n    paddingVertical: 10,\n    width: '100%'\n  },\n  menuItemText: {\n    fontSize: 17,\n    color: '#333'\n  }\n});\nexport default MenuPop;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TouchableOpacity","Popover","jsx","_jsx","jsxs","_jsxs","MenuPop","_useState","_useState2","_slicedToArray","isMenuVisible","setIsMenuVisible","toggleMenu","style","styles","container","children","isVisible","onBackdropPress","placement","from","button","onPress","buttonText","menuContainer","menuItem","console","log","menuItemText","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","color","fontWeight","paddingVertical","width","fontSize"],"sources":["/home/senac/Docks-mobile-P.I/src/Screens/MenuPopUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport { Popover } from 'react-native-elements/dist/popover/Popover';\n\n\nconst MenuPop = () => {\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMenuVisible(!isMenuVisible);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Popover\n        isVisible={isMenuVisible}\n        onBackdropPress={toggleMenu}\n        placement=\"bottom\"\n        from={(\n          <TouchableOpacity style={styles.button} onPress={toggleMenu}>\n            <Text style={styles.buttonText}>Abrir menu</Text>\n          </TouchableOpacity>\n        )}\n      >\n        <View style={styles.menuContainer}>\n          <TouchableOpacity style={styles.menuItem} onPress={() => console.log('Editar livro')}>\n            <Text style={styles.menuItemText}>Editar livro</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.menuItem} onPress={() => console.log('Excluir livro')}>\n            <Text style={styles.menuItemText}>Excluir livro</Text>\n          </TouchableOpacity>\n        </View>\n      </Popover>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#e5e5e5',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#333',\n    fontWeight: 'bold',\n  },\n  menuContainer: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    alignItems: 'center',\n  },\n  menuItem: {\n    paddingVertical: 10,\n    width: '100%',\n  },\n  menuItemText: {\n    fontSize: 17,\n    color: '#333',\n  },\n});\n\nexport default MenuPop;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,OAAO,QAAQ,4CAA4C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrE,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,OACEP,IAAA,CAACL,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5Bb,IAAA,CAACF,OAAO;MACNgB,SAAS,EAAEP,aAAc;MACzBQ,eAAe,EAAEN,UAAW;MAC5BO,SAAS,EAAC,QAAQ;MAClBC,IAAI,EACFjB,IAAA,CAACH,gBAAgB;QAACa,KAAK,EAAEC,MAAM,CAACO,MAAO;QAACC,OAAO,EAAEV,UAAW;QAAAI,QAAA,EAC1Db,IAAA,CAACJ,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACS,UAAW;UAAAP,QAAA,EAAC;QAAU;MAAO,EAEnD;MAAAA,QAAA,EAEFX,KAAA,CAACP,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACU,aAAc;QAAAR,QAAA,GAChCb,IAAA,CAACH,gBAAgB;UAACa,KAAK,EAAEC,MAAM,CAACW,QAAS;UAACH,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAAA,CAAC;UAAAX,QAAA,EACnFb,IAAA,CAACJ,IAAI;YAACc,KAAK,EAAEC,MAAM,CAACc,YAAa;YAAAZ,QAAA,EAAC;UAAY;QAAO,EACpC,EACnBb,IAAA,CAACH,gBAAgB;UAACa,KAAK,EAAEC,MAAM,CAACW,QAAS;UAACH,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMI,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAAA,CAAC;UAAAX,QAAA,EACpFb,IAAA,CAACJ,IAAI;YAACc,KAAK,EAAEC,MAAM,CAACc,YAAa;YAAAZ,QAAA,EAAC;UAAa;QAAO,EACrC;MAAA;IACd;EACC,EACL;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGjB,UAAU,CAACgC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDX,MAAM,EAAE;IACNY,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfH,UAAU,EAAE;EACd,CAAC;EACDT,UAAU,EAAE;IACVa,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EACd,CAAC;EACDb,aAAa,EAAE;IACbS,eAAe,EAAE,OAAO;IACxBE,YAAY,EAAE,CAAC;IACfD,OAAO,EAAE,EAAE;IACXF,UAAU,EAAE;EACd,CAAC;EACDP,QAAQ,EAAE;IACRa,eAAe,EAAE,EAAE;IACnBC,KAAK,EAAE;EACT,CAAC;EACDX,YAAY,EAAE;IACZY,QAAQ,EAAE,EAAE;IACZJ,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe9B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}