{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\";\nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\nimport ModalCadLivros from \"../Screens/ModalScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar CustomDrawer = function CustomDrawer(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsx(DrawerItemList, _objectSpread({}, props))\n  }));\n};\nexport function MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawer, _objectSpread({}, props));\n    },\n    useLegacyImplementation: true,\n    screenOptions: {\n      drawerStyle: {\n        width: 250,\n        height: 700,\n        marginTop: \"60px\"\n      },\n      drawerPosition: \"right\",\n      headerRight: function headerRight() {\n        var navigation = useNavigation();\n        return _jsx(Ionicons, {\n          name: \"menu\",\n          size: 28,\n          color: \"black\",\n          style: {\n            marginRight: 15\n          },\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return;\n      },\n      headerStyle: {\n        backgroundColor: \"#D5ECB4\"\n      }\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Biblioteca\",\n      component: BiblioScreen,\n      options: {\n        headerTitleAlign: \"center\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Configura\\xE7\\xF5es\",\n      component: ConfigScreen,\n      options: {\n        headerTitleAlign: \"center\",\n        headerLeft: function headerLeft() {\n          return _jsx(Image, {\n            source: require(\"./src/Images/Docks.png\")\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Cadastro de livro\",\n      component: ModalCadLivros,\n      options: {\n        headerTitleAlign: \"center\"\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useNavigation","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","Ionicons","BiblioScreen","ConfigScreen","ModalCadLivros","jsx","_jsx","jsxs","_jsxs","Drawer","CustomDrawer","props","_objectSpread","children","MyDrawer","Navigator","drawerContent","useLegacyImplementation","screenOptions","drawerStyle","width","height","marginTop","drawerPosition","headerRight","navigation","name","size","color","style","marginRight","onPress","openDrawer","headerLeft","headerStyle","backgroundColor","Screen","component","options","headerTitleAlign","Image","source","require"],"sources":["/home/senac/Docks-mobile-P.I/src/Navigation/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\";\nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\n\nimport ModalCadLivros from \"../Screens/ModalScreen\";\n\nconst Drawer = createDrawerNavigator();\nconst CustomDrawer = (props) => {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n    </DrawerContentScrollView>\n  );\n};\n\nexport function MyDrawer() {\n  return (\n    <Drawer.Navigator\n      drawerContent={(props) => <CustomDrawer {...props} />}\n      useLegacyImplementation\n      screenOptions={{\n        drawerStyle: {\n          width: 250,\n          height: 700,\n          marginTop: \"60px\",\n        },\n        drawerPosition: \"right\",\n        headerRight: () => {\n          const navigation = useNavigation();\n          return (\n            <Ionicons\n              name=\"menu\"\n              size={28}\n              color=\"black\"\n              style={{ marginRight: 15 }}\n              onPress={() => navigation.openDrawer()}\n            />\n          );\n        },\n        headerLeft: () => {\n          return;\n        },\n        headerStyle: { backgroundColor: \"#D5ECB4\" },\n      }}\n    >\n      <Drawer.Screen         name=\"Biblioteca\"\n        component={BiblioScreen}\n        options={{\n          headerTitleAlign: \"center\",\n        }}\n      />\n      <Drawer.Screen\n        name=\"Configurações\"\n        component={ConfigScreen}\n        options={{\n          headerTitleAlign: \"center\",\n          headerLeft: () => (\n            <Image\n              source={require(\"./src/Images/Docks.png\")}\n              //style={styles.headerImage}\n            />\n          ),\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Cadastro de livro\"\n        component={ModalCadLivros}\n        options={{\n          headerTitleAlign: \"center\",\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SACEC,qBAAqB,EACrBC,uBAAuB,EACvBC,cAAc,QACT,0BAA0B;AACjC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY;AACrB,SAASC,YAAY;AAErB,OAAOC,cAAc;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,MAAM,GAAGX,qBAAqB,EAAE;AACtC,IAAMY,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;EAC9B,OACEL,IAAA,CAACP,uBAAuB,EAAAa,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAAE,QAAA,EAChCP,IAAA,CAACN,cAAc,EAAAY,aAAA,KAAKD,KAAK;EAAI,GACL;AAE9B,CAAC;AAED,OAAO,SAASG,QAAQA,CAAA,EAAG;EACzB,OACEN,KAAA,CAACC,MAAM,CAACM,SAAS;IACfC,aAAa,EAAE,SAAAA,cAACL,KAAK;MAAA,OAAKL,IAAA,CAACI,YAAY,EAAAE,aAAA,KAAKD,KAAK,EAAI;IAAA,CAAC;IACtDM,uBAAuB;IACvBC,aAAa,EAAE;MACbC,WAAW,EAAE;QACXC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,SAAS,EAAE;MACb,CAAC;MACDC,cAAc,EAAE,OAAO;MACvBC,WAAW,EAAE,SAAAA,YAAA,EAAM;QACjB,IAAMC,UAAU,GAAG5B,aAAa,EAAE;QAClC,OACES,IAAA,CAACL,QAAQ;UACPyB,IAAI,EAAC,MAAM;UACXC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC,OAAO;UACbC,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAG,CAAE;UAC3BC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMN,UAAU,CAACO,UAAU,EAAE;UAAA;QAAC,EACvC;MAEN,CAAC;MACDC,UAAU,EAAE,SAAAA,WAAA,EAAM;QAChB;MACF,CAAC;MACDC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAU;IAC5C,CAAE;IAAAtB,QAAA,GAEFP,IAAA,CAACG,MAAM,CAAC2B,MAAM;MAASV,IAAI,EAAC,YAAY;MACtCW,SAAS,EAAEnC,YAAa;MACxBoC,OAAO,EAAE;QACPC,gBAAgB,EAAE;MACpB;IAAE,EACF,EACFjC,IAAA,CAACG,MAAM,CAAC2B,MAAM;MACZV,IAAI,EAAC,qBAAe;MACpBW,SAAS,EAAElC,YAAa;MACxBmC,OAAO,EAAE;QACPC,gBAAgB,EAAE,QAAQ;QAC1BN,UAAU,EAAE,SAAAA,WAAA;UAAA,OACV3B,IAAA,CAACkC,KAAK;YACJC,MAAM,EAAEC,OAAO;UAA2B,EAE1C;QAAA;MAEN;IAAE,EACF,EAEFpC,IAAA,CAACG,MAAM,CAAC2B,MAAM;MACZV,IAAI,EAAC,mBAAmB;MACxBW,SAAS,EAAEjC,cAAe;MAC1BkC,OAAO,EAAE;QACPC,gBAAgB,EAAE;MACpB;IAAE,EACF;EAAA,EACe;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}