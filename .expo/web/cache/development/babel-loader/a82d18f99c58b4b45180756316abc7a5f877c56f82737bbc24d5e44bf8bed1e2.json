{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getSegmentedButtonBorderRadius, getSegmentedButtonColors, getSegmentedButtonDensityPadding } from \"./utils\";\nvar SegmentedButtonItem = function SegmentedButtonItem(_ref) {\n  var checked = _ref.checked,\n    accessibilityLabel = _ref.accessibilityLabel,\n    disabled = _ref.disabled,\n    style = _ref.style,\n    showSelectedCheck = _ref.showSelectedCheck,\n    icon = _ref.icon,\n    testID = _ref.testID,\n    label = _ref.label,\n    onPress = _ref.onPress,\n    segment = _ref.segment,\n    _ref$density = _ref.density,\n    density = _ref$density === void 0 ? 'regular' : _ref$density,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  var checkScale = React.useRef(new Animated.Value(0)).current;\n  React.useEffect(function () {\n    if (!showSelectedCheck) {\n      return;\n    }\n    if (checked) {\n      Animated.spring(checkScale, {\n        toValue: 1,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.spring(checkScale, {\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [checked, checkScale, showSelectedCheck]);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3;\n  var _getSegmentedButtonCo = getSegmentedButtonColors({\n      checked: checked,\n      theme: theme,\n      disabled: disabled\n    }),\n    borderColor = _getSegmentedButtonCo.borderColor,\n    textColor = _getSegmentedButtonCo.textColor,\n    borderWidth = _getSegmentedButtonCo.borderWidth,\n    backgroundColor = _getSegmentedButtonCo.backgroundColor;\n  var borderRadius = (isV3 ? 5 : 1) * roundness;\n  var segmentBorderRadius = getSegmentedButtonBorderRadius({\n    theme: theme,\n    segment: segment\n  });\n  var rippleColor = color(textColor).alpha(0.12).rgb().string();\n  var showIcon = !icon ? false : label && checked ? !showSelectedCheck : true;\n  var showCheckedIcon = checked && showSelectedCheck;\n  var iconSize = isV3 ? 18 : 16;\n  var iconStyle = _objectSpread({\n    marginRight: label ? 5 : showCheckedIcon ? 3 : 0\n  }, label && {\n    transform: [{\n      scale: checkScale.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      })\n    }]\n  });\n  var buttonStyle = _objectSpread({\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    borderWidth: borderWidth,\n    borderRadius: borderRadius\n  }, segmentBorderRadius);\n  var paddingVertical = getSegmentedButtonDensityPadding({\n    density: density\n  });\n  var rippleStyle = _objectSpread({\n    borderRadius: borderRadius\n  }, segmentBorderRadius);\n  var labelTextStyle = _objectSpread(_objectSpread({}, !isV3 ? {\n    textTransform: 'uppercase',\n    fontWeight: '500'\n  } : theme.fonts.labelLarge), {}, {\n    color: textColor\n  });\n  return React.createElement(View, {\n    style: [buttonStyle, styles.button, style]\n  }, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    rippleColor: rippleColor,\n    testID: testID,\n    style: rippleStyle,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.content, {\n      paddingVertical: paddingVertical\n    }]\n  }, showCheckedIcon ? React.createElement(Animated.View, {\n    testID: testID + \"-check-icon\",\n    style: [iconStyle, {\n      transform: [{\n        scale: checkScale\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: 'check',\n    size: iconSize\n  })) : null, showIcon ? React.createElement(Animated.View, {\n    testID: testID + \"-icon\",\n    style: iconStyle\n  }, React.createElement(Icon, {\n    source: icon,\n    size: iconSize,\n    color: disabled ? textColor : undefined\n  })) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    style: [styles.label, labelTextStyle],\n    selectable: false,\n    numberOfLines: 1\n  }, label))));\n};\nvar styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    minWidth: 76,\n    borderStyle: 'solid'\n  },\n  label: {\n    textAlign: 'center'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 9,\n    paddingHorizontal: 16\n  }\n});\nexport default SegmentedButtonItem;\nexport { SegmentedButtonItem as SegmentedButton };","map":{"version":3,"names":["React","Animated","StyleSheet","View","color","useInternalTheme","Icon","TouchableRipple","Text","getSegmentedButtonBorderRadius","getSegmentedButtonColors","getSegmentedButtonDensityPadding","SegmentedButtonItem","_ref","checked","accessibilityLabel","disabled","style","showSelectedCheck","icon","testID","label","onPress","segment","_ref$density","density","themeOverrides","theme","checkScale","useRef","Value","current","useEffect","spring","toValue","useNativeDriver","start","roundness","isV3","_getSegmentedButtonCo","borderColor","textColor","borderWidth","backgroundColor","borderRadius","segmentBorderRadius","rippleColor","alpha","rgb","string","showIcon","showCheckedIcon","iconSize","iconStyle","_objectSpread","marginRight","transform","scale","interpolate","inputRange","outputRange","buttonStyle","paddingVertical","rippleStyle","labelTextStyle","textTransform","fontWeight","fonts","labelLarge","createElement","styles","button","borderless","accessibilityState","accessibilityRole","content","source","size","undefined","variant","selectable","numberOfLines","create","flex","minWidth","borderStyle","textAlign","flexDirection","alignItems","justifyContent","paddingHorizontal","SegmentedButton"],"sources":["SegmentedButtonItem.tsx"],"sourcesContent":[null],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAW9B,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB;AAEzB,OAAOC,IAAI;AACX,OAAOC,eAAe;AACtB,OAAOC,IAAI;AACX,SACEC,8BAA8B,EAC9BC,wBAAwB,EACxBC,gCAAgC;AAuDlC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGC,IAAA,EAaf;EAAA,IAZXC,OAAO,GAYDD,IAAA,CAZNC,OAAO;IACPC,kBAAkB,GAWZF,IAAA,CAXNE,kBAAkB;IAClBC,QAAQ,GAUFH,IAAA,CAVNG,QAAQ;IACRC,KAAK,GASCJ,IAAA,CATNI,KAAK;IACLC,iBAAiB,GAQXL,IAAA,CARNK,iBAAiB;IACjBC,IAAI,GAOEN,IAAA,CAPNM,IAAI;IACJC,MAAM,GAMAP,IAAA,CANNO,MAAM;IACNC,KAAK,GAKCR,IAAA,CALNQ,KAAK;IACLC,OAAO,GAIDT,IAAA,CAJNS,OAAO;IACPC,OAAO,GAGDV,IAAA,CAHNU,OAAO;IAAAC,YAAA,GAGDX,IAAA,CAFNY,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,SAAS,GAAAA,YAAA;IACZE,cAAA,GACDb,IAAA,CADNc,KAAK;EAEL,IAAMA,KAAK,GAAGtB,gBAAgB,CAACqB,cAAc,CAAC;EAE9C,IAAME,UAAU,GAAG5B,KAAK,CAAC6B,MAAM,CAAC,IAAI5B,QAAQ,CAAC6B,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE9D/B,KAAK,CAACgC,SAAS,CAAC,YAAM;IACpB,IAAI,CAACd,iBAAiB,EAAE;MACtB;IACF;IACA,IAAIJ,OAAO,EAAE;MACXb,QAAQ,CAACgC,MAAM,CAACL,UAAU,EAAE;QAC1BM,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,EAAE;IACZ,CAAC,MAAM;MACLnC,QAAQ,CAACgC,MAAM,CAACL,UAAU,EAAE;QAC1BM,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,EAAE;IACZ;EACF,CAAC,EAAE,CAACtB,OAAO,EAAEc,UAAU,EAAEV,iBAAiB,CAAC,CAAC;EAE5C,IAAQmB,SAAS,GAAWV,KAAK,CAAzBU,SAAS;IAAEC,IAAA,GAASX,KAAK,CAAdW,IAAA;EACnB,IAAAC,qBAAA,GACE7B,wBAAwB,CAAC;MACvBI,OAAO,EAAPA,OAAO;MACPa,KAAK,EAALA,KAAK;MACLX,QAAA,EAAAA;IACF,CAAC,CAAC;IALIwB,WAAW,GAAAD,qBAAA,CAAXC,WAAW;IAAEC,SAAS,GAAAF,qBAAA,CAATE,SAAS;IAAEC,WAAW,GAAAH,qBAAA,CAAXG,WAAW;IAAEC,eAAA,GAAAJ,qBAAA,CAAAI,eAAA;EAO7C,IAAMC,YAAY,GAAG,CAACN,IAAI,GAAG,CAAC,GAAG,CAAC,IAAID,SAAS;EAC/C,IAAMQ,mBAAmB,GAAGpC,8BAA8B,CAAC;IACzDkB,KAAK,EAALA,KAAK;IACLJ,OAAA,EAAAA;EACF,CAAC,CAAC;EACF,IAAMuB,WAAW,GAAG1C,KAAK,CAACqC,SAAS,CAAC,CAACM,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EAE/D,IAAMC,QAAQ,GAAG,CAAC/B,IAAI,GAAG,KAAK,GAAGE,KAAK,IAAIP,OAAO,GAAG,CAACI,iBAAiB,GAAG,IAAI;EAC7E,IAAMiC,eAAe,GAAGrC,OAAO,IAAII,iBAAiB;EAEpD,IAAMkC,QAAQ,GAAGd,IAAI,GAAG,EAAE,GAAG,EAAE;EAC/B,IAAMe,SAAS,GAAAC,aAAA;IACbC,WAAW,EAAElC,KAAK,GAAG,CAAC,GAAG8B,eAAe,GAAG,CAAC,GAAG;EAAC,GAC5C9B,KAAK,IAAI;IACXmC,SAAS,EAAE,CACT;MACEC,KAAK,EAAE7B,UAAU,CAAC8B,WAAW,CAAC;QAC5BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;MACpB,CAAC;IACH,CAAC;EAEL,CAAC,CACF;EAED,IAAMC,WAAsB,GAAAP,aAAA;IAC1BX,eAAe,EAAfA,eAAe;IACfH,WAAW,EAAXA,WAAW;IACXE,WAAW,EAAXA,WAAW;IACXE,YAAY,EAAZA;EAAY,GACTC,mBAAA,CACJ;EACD,IAAMiB,eAAe,GAAGnD,gCAAgC,CAAC;IAAEc,OAAA,EAAAA;EAAQ,CAAC,CAAC;EACrE,IAAMsC,WAAsB,GAAAT,aAAA;IAC1BV,YAAY,EAAZA;EAAY,GACTC,mBAAA,CACJ;EACD,IAAMmB,cAAyB,GAAAV,aAAA,CAAAA,aAAA,KACzB,CAAChB,IAAI,GACL;IACE2B,aAAa,EAAE,WAAW;IAC1BC,UAAU,EAAE;EACd,CAAC,GACDvC,KAAK,CAACwC,KAAK,CAACC,UAAU;IAC1BhE,KAAK,EAAEqC;EAAA,EACR;EAED,OACEzC,KAAA,CAAAqE,aAAA,CAAClE,IAAI;IAACc,KAAK,EAAE,CAAC4C,WAAW,EAAES,MAAM,CAACC,MAAM,EAAEtD,KAAK;EAAE,GAC/CjB,KAAA,CAAAqE,aAAA,CAAC9D,eAAe;IACdiE,UAAU;IACVlD,OAAO,EAAEA,OAAQ;IACjBP,kBAAkB,EAAEA,kBAAmB;IACvC0D,kBAAkB,EAAE;MAAEzD,QAAQ,EAARA,QAAQ;MAAEF,OAAA,EAAAA;IAAQ,CAAE;IAC1C4D,iBAAiB,EAAC,QAAQ;IAC1B1D,QAAQ,EAAEA,QAAS;IACnB8B,WAAW,EAAEA,WAAY;IACzB1B,MAAM,EAAEA,MAAO;IACfH,KAAK,EAAE8C,WAAY;IACnBpC,KAAK,EAAEA;EAAM,GAEb3B,KAAA,CAAAqE,aAAA,CAAClE,IAAI;IAACc,KAAK,EAAE,CAACqD,MAAM,CAACK,OAAO,EAAE;MAAEb,eAAA,EAAAA;IAAgB,CAAC;EAAE,GAChDX,eAAe,GACdnD,KAAA,CAAAqE,aAAA,CAACpE,QAAQ,CAACE,IAAI;IACZiB,MAAM,EAAKA,MAAO,gBAAa;IAC/BH,KAAK,EAAE,CAACoC,SAAS,EAAE;MAAEG,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE7B;MAAW,CAAC;IAAE,CAAC;EAAE,GAE3D5B,KAAA,CAAAqE,aAAA,CAAC/D,IAAI;IAACsE,MAAM,EAAE,OAAQ;IAACC,IAAI,EAAEzB;EAAS,EAAG,CAC3B,GACd,IAAI,EACPF,QAAQ,GACPlD,KAAA,CAAAqE,aAAA,CAACpE,QAAQ,CAACE,IAAI;IAACiB,MAAM,EAAKA,MAAO,UAAO;IAACH,KAAK,EAAEoC;EAAU,GACxDrD,KAAA,CAAAqE,aAAA,CAAC/D,IAAI;IACHsE,MAAM,EAAEzD,IAAK;IACb0D,IAAI,EAAEzB,QAAS;IACfhD,KAAK,EAAEY,QAAQ,GAAGyB,SAAS,GAAGqC;EAAU,EACxC,CACY,GACd,IAAI,EACR9E,KAAA,CAAAqE,aAAA,CAAC7D,IAAI;IACHuE,OAAO,EAAC,YAAY;IACpB9D,KAAK,EAAE,CAACqD,MAAM,CAACjD,KAAK,EAAE2C,cAAc,CAAE;IACtCgB,UAAU,EAAE,KAAM;IAClBC,aAAa,EAAE;EAAE,GAEhB5D,KAAK,CACD,CACF,CACS,CACb;AAEX,CAAC;AAED,IAAMiD,MAAM,GAAGpE,UAAU,CAACgF,MAAM,CAAC;EAC/BX,MAAM,EAAE;IACNY,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf,CAAC;EACDhE,KAAK,EAAE;IACLiE,SAAS,EAAE;EACb,CAAC;EACDX,OAAO,EAAE;IACPY,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxB3B,eAAe,EAAE,CAAC;IAClB4B,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAe9E,mBAAmB;AAElC,SAASA,mBAAmB,IAAI+E,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}