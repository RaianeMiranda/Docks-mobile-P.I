{"ast":null,"code":"import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { HomeScreen } from \"../Screens/HomeScreen\";\nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\nimport { styles } from \"../Configuracoes/styles\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport var RootNavigation = function RootNavigation() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      style: styles.navConfig,\n      options: {\n        headerShown: false\n      },\n      name: \"Config\",\n      component: ConfigScreen\n    }), _jsx(Stack.Screen, {\n      style: styles.navConfig,\n      options: {\n        headerShown: false\n      },\n      name: \"Biblio\",\n      component: BiblioScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Drawer\",\n      component: MenuDrawer,\n      options: {\n        title: \"Auth Box\",\n        headerStyle: {\n          backgroundColor: \"#4B088A\"\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"900\"\n        }\n      }\n    })]\n  });\n};\nvar Drawer = createDrawerNavigator();\nfunction MenuDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    initialRouteName: \"Home\",\n    screenOptions: {\n      drawerType: \"front\",\n      drawerStyle: {\n        width: \"60%\",\n        color: 'red'\n      },\n      overlayColor: \"transparent\"\n    },\n    drawerStyle: {\n      backgroundColor: \"gray\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Biblioteca\",\n      component: BiblioScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Configura\\xE7\\xF5es\",\n      component: ConfigScreen\n    })]\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","HomeScreen","ConfigScreen","styles","BiblioScreen","createDrawerNavigator","jsx","_jsx","jsxs","_jsxs","Stack","RootNavigation","Navigator","children","Screen","name","component","style","navConfig","options","headerShown","MenuDrawer","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Drawer","useLegacyImplementation","initialRouteName","screenOptions","drawerType","drawerStyle","width","color","overlayColor"],"sources":["/home/senac/Docks-mobile-P.I/src/Navigation/index.js"],"sourcesContent":["import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { HomeScreen } from \"../Screens/HomeScreen\";\nimport { ConfigScreen } from \"../Screens/ConfigScreen\";\nimport { styles } from \"../Configuracoes/styles\";\nimport { BiblioScreen } from \"../Screens/BiblioScreen\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\nconst Stack = createNativeStackNavigator();\nexport const RootNavigation = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n      <Stack.Screen\n        style={styles.navConfig}\n        options={{ headerShown: false }}\n        name=\"Config\"\n        component={ConfigScreen}\n      />\n      <Stack.Screen\n        style={styles.navConfig}\n        options={{ headerShown: false }}\n        name=\"Biblio\"\n        component={BiblioScreen}\n      />\n          <Stack.Screen\n          name={\"Drawer\"}\n          component={MenuDrawer}\n          options={{\n            title: \"Auth Box\",\n            headerStyle: {\n              backgroundColor: \"#4B088A\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"900\",\n            },\n          }}\n        />\n    </Stack.Navigator>\n  );\n};\nconst Drawer = createDrawerNavigator();\n\nfunction MenuDrawer() {\n  return (\n\n    <Drawer.Navigator\n      useLegacyImplementation\n      initialRouteName=\"Home\"\n      screenOptions={{\n        drawerType: \"front\",\n        drawerStyle: { width: \"60%\", color:'red' },\n        overlayColor: \"transparent\",\n      }}\n      drawerStyle={{\n        backgroundColor: \"gray\",\n      }}\n    >\n\n    \n      <Drawer.Screen name=\"Biblioteca\" component={BiblioScreen} />\n      <Drawer.Screen name=\"Configurações\" component={ConfigScreen} />\n    </Drawer.Navigator>\n  );\n}\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,UAAU;AACnB,SAASC,YAAY;AACrB,SAASC,MAAM;AACf,SAASC,YAAY;AACrB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjE,IAAMC,KAAK,GAAGV,0BAA0B,EAAE;AAC1C,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,OACEF,KAAA,CAACC,KAAK,CAACE,SAAS;IAAAC,QAAA,GACdN,IAAA,CAACG,KAAK,CAACI,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEf;IAAW,EAAG,EACnDM,IAAA,CAACG,KAAK,CAACI,MAAM;MACXG,KAAK,EAAEd,MAAM,CAACe,SAAU;MACxBC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAChCL,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEd;IAAa,EACxB,EACFK,IAAA,CAACG,KAAK,CAACI,MAAM;MACXG,KAAK,EAAEd,MAAM,CAACe,SAAU;MACxBC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAChCL,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEZ;IAAa,EACxB,EACEG,IAAA,CAACG,KAAK,CAACI,MAAM;MACbC,IAAI,EAAE,QAAS;MACfC,SAAS,EAAEK,UAAW;MACtBF,OAAO,EAAE;QACPG,KAAK,EAAE,UAAU;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF;IAAE,EACF;EAAA,EACY;AAEtB,CAAC;AACD,IAAMC,MAAM,GAAGvB,qBAAqB,EAAE;AAEtC,SAASgB,UAAUA,CAAA,EAAG;EACpB,OAEEZ,KAAA,CAACmB,MAAM,CAAChB,SAAS;IACfiB,uBAAuB;IACvBC,gBAAgB,EAAC,MAAM;IACvBC,aAAa,EAAE;MACbC,UAAU,EAAE,OAAO;MACnBC,WAAW,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAC;MAAM,CAAC;MAC1CC,YAAY,EAAE;IAChB,CAAE;IACFH,WAAW,EAAE;MACXT,eAAe,EAAE;IACnB,CAAE;IAAAX,QAAA,GAIFN,IAAA,CAACqB,MAAM,CAACd,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEZ;IAAa,EAAG,EAC5DG,IAAA,CAACqB,MAAM,CAACd,MAAM;MAACC,IAAI,EAAC,qBAAe;MAACC,SAAS,EAAEd;IAAa,EAAG;EAAA,EAC9C;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}