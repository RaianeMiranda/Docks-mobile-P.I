{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"style\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/themes/v2/colors\";\nimport { getCardCoverStyle } from \"./utils\";\nvar CardCover = function CardCover(_ref) {\n  var index = _ref.index,\n    total = _ref.total,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var coverStyle = getCardCoverStyle({\n    theme: theme,\n    index: index,\n    total: total\n  });\n  return React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle],\n    accessibilityIgnoresInvertColors: true\n  })));\n};\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default CardCover;\nexport { CardCover };","map":{"version":3,"names":["React","Image","StyleSheet","View","useInternalTheme","grey200","getCardCoverStyle","CardCover","_ref","index","total","style","themeOverrides","theme","rest","_objectWithoutProperties","_excluded","coverStyle","createElement","styles","container","_extends","image","accessibilityIgnoresInvertColors","displayName","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent"],"sources":["CardCover.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAG9B,SAASC,gBAAgB;AACzB,SAASC,OAAO;AAEhB,SAASC,iBAAiB;AA2C1B,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAGC,IAAA,EAML;EAAA,IALXC,KAAK,GAKCD,IAAA,CALNC,KAAK;IACLC,KAAK,GAICF,IAAA,CAJNE,KAAK;IACLC,KAAK,GAGCH,IAAA,CAHNG,KAAK;IACEC,cAAc,GAEfJ,IAAA,CAFNK,KAAK;IACFC,IAAA,GAAAC,wBAAA,CACGP,IAAA,EAAAQ,SAAA;EACN,IAAMH,KAAK,GAAGT,gBAAgB,CAACQ,cAAc,CAAC;EAC9C,IAAMK,UAAU,GAAGX,iBAAiB,CAAC;IAAEO,KAAK,EAALA,KAAK;IAAEJ,KAAK,EAALA,KAAK;IAAEC,KAAA,EAAAA;EAAM,CAAC,CAAC;EAE7D,OACEV,KAAA,CAAAkB,aAAA,CAACf,IAAI;IAACQ,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAS,EAAEH,UAAU,EAAEN,KAAK;EAAE,GACjDX,KAAA,CAAAkB,aAAA,CAACjB,KAAK,EAAAoB,QAAA,KACAP,IAAI;IACRH,KAAK,EAAE,CAACQ,MAAM,CAACG,KAAK,EAAEL,UAAU,CAAE;IAClCM,gCAAgC;EAAA,GAChC,CACG;AAEX,CAAC;AAEDhB,SAAS,CAACiB,WAAW,GAAG,YAAY;AACpC,IAAML,MAAM,GAAGjB,UAAU,CAACuB,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,MAAM,EAAE,GAAG;IACXC,eAAe,EAAEtB,OAAO;IACxBuB,QAAQ,EAAE;EACZ,CAAC;EACDN,KAAK,EAAE;IACLO,IAAI,EAAE,CAAC;IACPH,MAAM,EAAEI,SAAS;IACjBC,KAAK,EAAED,SAAS;IAChBE,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe1B,SAAS;AAGxB,SAASA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}