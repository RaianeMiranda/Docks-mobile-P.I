{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport { Login } from \"../screens/Login\";\nimport { Register } from \"../screens/Register\";\nimport Home from \"../screens/Home\";\nimport Config from \"../screens/Config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport var RootNavigation = function RootNavigation() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Drawer\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false,\n          title: \"Tela de Login\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: {\n          headerShown: false,\n          title: \"Tela de registro\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Drawer\",\n        component: MenuDrawer,\n        options: {\n          title: \"Auth Box\",\n          headerStyle: {\n            backgroundColor: \"#4B088A\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"900\"\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Perfil\",\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Config\",\n        component: Config\n      })]\n    })\n  });\n};\nvar Drawer = createDrawerNavigator();\nfunction MenuDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    initialRouteName: \"Home\",\n    screenOptions: {\n      drawerType: \"front\",\n      drawerStyle: {\n        width: \"60%\",\n        color: 'red'\n      },\n      overlayColor: \"transparent\"\n    },\n    drawerStyle: {\n      backgroundColor: \"gray\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Perfil\",\n      component: ProfileScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Drawer.Screen, {\n      name: \"Config\",\n      component: Config\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createDrawerNavigator","ProfileScreen","Login","Register","Home","Config","jsx","_jsx","jsxs","_jsxs","Stack","RootNavigation","children","Navigator","initialRouteName","Screen","name","component","options","headerShown","title","MenuDrawer","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Drawer","useLegacyImplementation","screenOptions","drawerType","drawerStyle","width","color","overlayColor"],"sources":["/home/senac/Docks-mobile-P.I/src/Navigation/index.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport { Login } from \"../screens/Login\";\nimport { Register } from \"../screens/Register\";\nimport Home from \"../screens/Home\";\nimport Config from \"../screens/Config\";\n\nconst Stack = createNativeStackNavigator();\n\nexport const RootNavigation = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Drawer\">\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{\n            headerShown: false,\n            title: \"Tela de Login\",\n          }}\n        />\n\n        <Stack.Screen\n          name=\"Register\"\n          component={Register}\n          options={{\n            headerShown: false,\n            title: \"Tela de registro\",\n          }}\n        />\n\n  \n\n\n        <Stack.Screen\n          name={\"Drawer\"}\n          component={MenuDrawer}\n          options={{\n            title: \"Auth Box\",\n            headerStyle: {\n              backgroundColor: \"#4B088A\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"900\",\n            },\n          }}\n        />\n        <Stack.Screen name={\"Perfil\"} component={ProfileScreen} />\n\n        <Stack.Screen\n          name={\"Home\"}\n          component={Home}\n          options={{\n            headerShown: false,\n          }}\n        />\n\n        <Stack.Screen name={\"Config\"} component={Config} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst Drawer = createDrawerNavigator();\n\nfunction MenuDrawer() {\n  return (\n\n    <Drawer.Navigator\n      useLegacyImplementation\n      initialRouteName=\"Home\"\n      screenOptions={{\n        drawerType: \"front\",\n        drawerStyle: { width: \"60%\", color:'red' },\n        overlayColor: \"transparent\",\n      }}\n      drawerStyle={{\n        backgroundColor: \"gray\",\n      }}\n    >\n\n      <Drawer.Screen name=\"Perfil\" component={ProfileScreen} />\n      <Drawer.Screen name=\"Home\" component={Home} />\n      <Drawer.Screen name=\"Config\" component={Config} />\n    </Drawer.Navigator>\n  );\n}"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,aAAa;AACpB,SAASC,KAAK;AACd,SAASC,QAAQ;AACjB,OAAOC,IAAI;AACX,OAAOC,MAAM;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,KAAK,GAAGX,0BAA0B,EAAE;AAE1C,OAAO,IAAMY,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,OACEJ,IAAA,CAACT,mBAAmB;IAAAc,QAAA,EAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,QAAQ;MAAAF,QAAA,GACxCL,IAAA,CAACG,KAAK,CAACK,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAEf,KAAM;QACjBgB,OAAO,EAAE;UACPC,WAAW,EAAE,KAAK;UAClBC,KAAK,EAAE;QACT;MAAE,EACF,EAEFb,IAAA,CAACG,KAAK,CAACK,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAEd,QAAS;QACpBe,OAAO,EAAE;UACPC,WAAW,EAAE,KAAK;UAClBC,KAAK,EAAE;QACT;MAAE,EACF,EAKFb,IAAA,CAACG,KAAK,CAACK,MAAM;QACXC,IAAI,EAAE,QAAS;QACfC,SAAS,EAAEI,UAAW;QACtBH,OAAO,EAAE;UACPE,KAAK,EAAE,UAAU;UACjBE,WAAW,EAAE;YACXC,eAAe,EAAE;UACnB,CAAC;UACDC,eAAe,EAAE,MAAM;UACvBC,gBAAgB,EAAE;YAChBC,UAAU,EAAE;UACd;QACF;MAAE,EACF,EACFnB,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAE,QAAS;QAACC,SAAS,EAAEhB;MAAc,EAAG,EAE1DM,IAAA,CAACG,KAAK,CAACK,MAAM;QACXC,IAAI,EAAE,MAAO;QACbC,SAAS,EAAEb,IAAK;QAChBc,OAAO,EAAE;UACPC,WAAW,EAAE;QACf;MAAE,EACF,EAEFZ,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAE,QAAS;QAACC,SAAS,EAAEZ;MAAO,EAAG;IAAA;EACnC,EACE;AAE1B,CAAC;AAED,IAAMsB,MAAM,GAAG3B,qBAAqB,EAAE;AAEtC,SAASqB,UAAUA,CAAA,EAAG;EACpB,OAEEZ,KAAA,CAACkB,MAAM,CAACd,SAAS;IACfe,uBAAuB;IACvBd,gBAAgB,EAAC,MAAM;IACvBe,aAAa,EAAE;MACbC,UAAU,EAAE,OAAO;MACnBC,WAAW,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAC;MAAM,CAAC;MAC1CC,YAAY,EAAE;IAChB,CAAE;IACFH,WAAW,EAAE;MACXR,eAAe,EAAE;IACnB,CAAE;IAAAX,QAAA,GAGFL,IAAA,CAACoB,MAAM,CAACZ,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAEhB;IAAc,EAAG,EACzDM,IAAA,CAACoB,MAAM,CAACZ,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEb;IAAK,EAAG,EAC9CG,IAAA,CAACoB,MAAM,CAACZ,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAEZ;IAAO,EAAG;EAAA,EACjC;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}