{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Feed() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"FEED\"\n    })\n  });\n}\nFeed.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerLeft: function headerLeft() {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        children: _jsx(Icon, {\n          name: \"bars\",\n          size: 30,\n          color: \"#000\"\n        })\n      });\n    }\n  };\n};\nfunction Article() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"ARTICKLE\"\n    })\n  });\n}\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Help\",\n      onPress: function onPress() {\n        return alert('Link to help');\n      }\n    })]\n  }));\n}\nvar Drawer = createDrawerNavigator();\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    screenOptions: {\n      drawerPosition: \"right\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Feed\",\n      component: Feed\n    }), _jsx(Drawer.Screen, {\n      name: \"Article\",\n      component: Article\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(MyDrawer, {})\n  });\n}","map":{"version":3,"names":["React","View","Text","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","jsx","_jsx","jsxs","_jsxs","Feed","style","flex","justifyContent","alignItems","children","navigationOptions","_ref","navigation","headerLeft","TouchableOpacity","onPress","toggleDrawer","Icon","name","size","color","Article","CustomDrawerContent","props","_objectSpread","label","alert","Drawer","MyDrawer","Navigator","useLegacyImplementation","drawerContent","screenOptions","drawerPosition","Screen","component","App"],"sources":["/home/senac/Docks-mobile-P.I/App.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\n\nfunction Feed() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>FEED</Text>\n    </View>\n  );\n}\n\nFeed.navigationOptions = ({ navigation }) => {\n  return {\n    headerLeft: () => (\n      <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n        <Icon name=\"bars\" size={30} color=\"#000\" />\n      </TouchableOpacity>\n    ),\n  };\n};\nfunction Article() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>ARTICKLE</Text>\n    </View>\n  );\n}\n\n\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n      <DrawerItem label=\"Help\" onPress={() => alert('Link to help')} />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator\n      useLegacyImplementation\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n      screenOptions={{\n        drawerPosition: \"right\"\n      }}\n    >\n      <Drawer.Screen name=\"Feed\" component={Feed} />\n      <Drawer.Screen name=\"Article\" component={Article} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,qBAAqB,EACrBC,uBAAuB,EACvBC,cAAc,EACdC,UAAU,QACL,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,SAASC,IAAIA,CAAA,EAAG;EACd,OACEH,IAAA,CAACR,IAAI;IAACY,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvER,IAAA,CAACP,IAAI;MAAAe,QAAA,EAAC;IAAI;EAAO,EACZ;AAEX;AAEAL,IAAI,CAACM,iBAAiB,GAAG,UAAAC,IAAA,EAAoB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACpC,OAAO;IACLC,UAAU,EAAE,SAAAA,WAAA;MAAA,OACVZ,IAAA,CAACa,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMH,UAAU,CAACI,YAAY,EAAE;QAAA,CAAC;QAAAP,QAAA,EACzDR,IAAA,CAACgB,IAAI;UAACC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM;MAAG,EAC1B;IAAA;EAEvB,CAAC;AACH,CAAC;AACD,SAASC,OAAOA,CAAA,EAAG;EACjB,OACEpB,IAAA,CAACR,IAAI;IAACY,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvER,IAAA,CAACP,IAAI;MAAAe,QAAA,EAAC;IAAQ;EAAO,EAChB;AAEX;AAIA,SAASa,mBAAmBA,CAACC,KAAK,EAAE;EAClC,OACEpB,KAAA,CAACN,uBAAuB,EAAA2B,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAAd,QAAA,GAChCR,IAAA,CAACH,cAAc,EAAA0B,aAAA,KAAKD,KAAK,EAAI,EAC7BtB,IAAA,CAACF,UAAU;MAAC0B,KAAK,EAAC,MAAM;MAACV,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMW,KAAK,CAAC,cAAc,CAAC;MAAA;IAAC,EAAG;EAAA,GACzC;AAE9B;AAEA,IAAMC,MAAM,GAAG/B,qBAAqB,EAAE;AAEtC,SAASgC,QAAQA,CAAA,EAAG;EAClB,OACEzB,KAAA,CAACwB,MAAM,CAACE,SAAS;IACfC,uBAAuB;IACvBC,aAAa,EAAE,SAAAA,cAACR,KAAK;MAAA,OAAKtB,IAAA,CAACqB,mBAAmB,EAAAE,aAAA,KAAKD,KAAK,EAAI;IAAA,CAAC;IAC7DS,aAAa,EAAE;MACbC,cAAc,EAAE;IAClB,CAAE;IAAAxB,QAAA,GAEFR,IAAA,CAAC0B,MAAM,CAACO,MAAM;MAAChB,IAAI,EAAC,MAAM;MAACiB,SAAS,EAAE/B;IAAK,EAAG,EAC9CH,IAAA,CAAC0B,MAAM,CAACO,MAAM;MAAChB,IAAI,EAAC,SAAS;MAACiB,SAAS,EAAEd;IAAQ,EAAG;EAAA,EACnC;AAEvB;AAEA,eAAe,SAASe,GAAGA,CAAA,EAAG;EAC5B,OACEnC,IAAA,CAACN,mBAAmB;IAAAc,QAAA,EAClBR,IAAA,CAAC2B,QAAQ;EAAG,EACQ;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}